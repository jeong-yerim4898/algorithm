def ans_side(color,ro):
    if ro == '-':
        tmp = [[0]*3 for _ in range(3)]
        for i in range(3):
            for j in range(3):
                tmp[2-j][i] = color[i][j]
        return tmp
    else:
        tmp = [[0] * 3 for _ in range(3)]
        for i in range(3):
            for j in range(3):
                tmp[j][2-i] = color[i][j]
        return tmp


def cubing(pos,rotate):
    global w,y,r,g,b,o
    if pos=='U':
        if rotate == '-': #반시계
            g1,g2,g3,b1,b2,b3 = g[0][0],g[0][1],g[0][2],b[0][0],b[0][1],b[0][2]
            o1,o2,o3,r1,r2,r3 = o[0][0],o[0][1],o[0][2],r[0][0],r[0][1],r[0][2]
            g[0][0], g[0][1], g[0][2], b[0][0], b[0][1], b[0][2] = o1,o2,o3,r1,r2,r3
            o[0][0], o[0][1], o[0][2], r[0][0], r[0][1], r[0][2] = b1,b2,b3,g1,g2,g3
            w = ans_side(w,rotate)
        else:
            g1, g2, g3, b1, b2, b3 = g[0][0], g[0][1], g[0][2], b[0][0], b[0][1], b[0][2]
            o1, o2, o3, r1, r2, r3 = o[0][0], o[0][1], o[0][2], r[0][0], r[0][1], r[0][2]
            g[0][0], g[0][1], g[0][2], b[0][0], b[0][1], b[0][2] = r1,r2,r3,o1,o2,o3
            o[0][0], o[0][1], o[0][2], r[0][0], r[0][1], r[0][2] = g1,g2,g3,b1,b2,b3
            w = ans_side(w, rotate)
    elif pos == 'D':
        if rotate == '-':
            g1,g2,g3,r1,r2,r3 = g[2][0],g[2][1],g[2][2],r[2][0],r[2][1],r[2][2]
            b1,b2,b3,o1,o2,o3 = b[2][0],b[2][1],b[2][2],o[2][0],o[2][1],o[2][2]
            g[2][0], g[2][1], g[2][2], r[2][0], r[2][1], r[2][2] = r1,r2,r3,b1,b2,b3
            b[2][0], b[2][1], b[2][2], o[2][0], o[2][1], o[2][2] = o1,o2,o3,g1,g2,g3
            y = ans_side(y,rotate)
        else:
            g1, g2, g3, r1, r2, r3 = g[2][0], g[2][1], g[2][2], r[2][0], r[2][1], r[2][2]
            b1, b2, b3, o1, o2, o3 = b[2][0], b[2][1], b[2][2], o[2][0], o[2][1], o[2][2]
            g[2][0], g[2][1], g[2][2], r[2][0], r[2][1], r[2][2] = o1, o2, o3, g1,g2,g3
            b[2][0], b[2][1], b[2][2], o[2][0], o[2][1], o[2][2] = r1,r2,r3, b1,b2,b3
            y = ans_side(y,rotate)
    elif pos =='F':
        if rotate =='-':
            y1, y2, y3, w1, w2, w3 = y[0][0], y[0][1], y[0][2], w[2][0], w[2][1], w[2][2]
            b1, b2, b3, g1, g2, g3 = b[0][0], b[1][0], b[2][0], g[0][2], g[1][2], g[2][2]
            y[0][0], y[0][1], y[0][2], w[2][0], w[2][1], w[2][2] = g1, g2, g3, b1, b2, b3
            b[0][0], b[1][0], b[2][0], g[0][2], g[1][2], g[2][2] = y3, y2, y1, w3, w2, w1
            r = ans_side(r, rotate)
        else:
            y1, y2, y3, w1, w2, w3 = y[0][0], y[0][1], y[0][2], w[2][0], w[2][1], w[2][2]
            b1, b2, b3, g1, g2, g3 = b[0][0], b[1][0], b[2][0], g[0][2], g[1][2], g[2][2]
            y[0][0], y[0][1], y[0][2], w[2][0], w[2][1], w[2][2] = b3, b2, b1, g3, g2, g1
            b[0][0], b[1][0], b[2][0], g[0][2], g[1][2], g[2][2] = w1, w2, w3, y1, y2, y3
            r = ans_side(r, rotate)
    elif pos =='B':
        if rotate =='-':
            w1,w2,w3,b1,b2,b3 = w[0][0],w[0][1],w[0][2],b[0][2],b[1][2],b[2][2]
            y1,y2,y3,g1,g2,g3 = y[2][0], y[2][1], y[2][2],g[0][0], g[1][0], g[2][0]
            w[0][0], w[0][1], w[0][2], b[0][2], b[1][2], b[2][2] = g3, g2, g1, w1, w2, w3
            g[0][0], g[1][0], g[2][0], y[2][0], y[2][1], y[2][2] = y1, y2, y3, b3, b2, b1
            o = ans_side(o, rotate)
        else:
            w1, w2, w3, b1, b2, b3 = w[0][0], w[0][1], w[0][2], b[0][2], b[1][2], b[2][2]
            g1, g2, g3, y1, y2, y3 = g[0][0], g[1][0], g[2][0], y[2][0], y[2][1], y[2][2]
            w[0][0], w[0][1], w[0][2], b[0][2], b[1][2], b[2][2] = b1, b2, b3, y3, y2, y1
            g[0][0], g[1][0], g[2][0], y[2][0], y[2][1], y[2][2] = w3, w2, w1, g1, g2, g3
            o = ans_side(o, rotate)
    elif pos == "L":
        if rotate == "-":
            w1, w2, w3, r1, r2, r3 = w[0][0], w[1][0], w[2][0], r[0][0], r[1][0], r[2][0]
            y1, y2, y3, o1, o2, o3 = y[0][0], y[1][0], y[2][0], o[0][2], o[1][2], o[2][2]
            w[0][0], w[1][0], w[2][0], r[0][0], r[1][0], r[2][0] = r1, r2, r3, y1, y2, y3
            y[0][0], y[1][0], y[2][0], o[0][2], o[1][2], o[2][2] = o3, o2, o1, w3, w2, w1
            g = ans_side(g, rotate)
        else:
            w1, w2, w3, r1, r2, r3 = w[0][0], w[1][0], w[2][0], r[0][0], r[1][0], r[2][0]
            y1, y2, y3, o1, o2, o3 = y[0][0], y[1][0], y[2][0], o[0][2], o[1][2], o[2][2]
            w[0][0], w[1][0], w[2][0], r[0][0], r[1][0], r[2][0] = o3, o2, o1, w1, w2, w3
            y[0][0], y[1][0], y[2][0], o[0][2], o[1][2], o[2][2] = r1, r2, r3, y3, y2, y1
            g = ans_side(g, rotate)
    elif pos == "R":
        if rotate == "-":
            w1, w2, w3, r1, r2, r3 = w[0][2], w[1][2], w[2][2], r[0][2], r[1][2], r[2][2]
            y1, y2, y3, o1, o2, o3 = y[0][2], y[1][2], y[2][2], o[0][0], o[1][0], o[2][0]
            w[0][2], w[1][2], w[2][2], r[0][2], r[1][2], r[2][2] = o3, o2, o1, w1, w2, w3
            y[0][2], y[1][2], y[2][2], o[0][0], o[1][0], o[2][0] = r1, r2, r3, y3, y2, y1
            b = ans_side(b, rotate)
        else:
            w1, w2, w3, r1, r2, r3 = w[0][2], w[1][2], w[2][2], r[0][2], r[1][2], r[2][2]
            y1, y2, y3, o1, o2, o3 = y[0][2], y[1][2], y[2][2], o[0][0], o[1][0], o[2][0]
            w[0][2], w[1][2], w[2][2], r[0][2], r[1][2], r[2][2] = r1, r2, r3, y1, y2, y3
            y[0][2], y[1][2], y[2][2], o[0][0], o[1][0], o[2][0] = o3, o2, o1, w3, w2, w1
            b = ans_side(b, rotate)
T = int(input())
for i in range(T):
    w = [['w']*3 for _ in range(3)] #U
    r = [['r']*3 for _ in range(3)] #F
    y = [['y']*3 for _ in range(3)] #D
    o = [['o']*3 for _ in range(3)] #B
    g = [['g']*3 for _ in range(3)] #L
    b = [['b']*3 for _ in range(3)] #R

    n = int(input())
    info_li = list(input().split())
    for info in info_li:
        pos, rotate = info[0],info[1]
        cubing(pos,rotate)
    for i in range(3):
        print(''.join(w[i]))